{"componentChunkName":"component---src-templates-post-js","path":"/project/lettgories/","result":{"data":{"mdx":{"id":"89a48d68-aa51-5886-beaa-1be57774985c","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lettgories\",\n  \"date\": \"2021-11-09\",\n  \"featuredImage\": \"./images/lettgories/lettgories.png\",\n  \"summary\": \"Animating great works of art.\",\n  \"tag\": [\"code\", \"all\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Container, {\n    fluid: true,\n    mdxType: \"Container\"\n  }, mdx(\"div\", {\n    className: \"pad\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    mdxType: \"Col\"\n  }, mdx(\"h2\", null, \"Project Summary\"), mdx(\"h3\", null, \"The History\"), mdx(\"p\", null, \"Category is a popular and casual party game, where players list words in a specific category starting with the same letter. There is another version where you use all the letters, but cannot repeat a letter. For example if the category is grocery produce if someone picks \\\"C\\\" and says \\\"corn,\\\" then another player cannot choose \\\"C\\\" again and say \\\"carrot.\\\" The other player has to choose a different letter. This version was made into a board game by USAopoly called \", mdx(Link, {\n    to: \"https://theop.games/products/tapple-fast-word-fun-for-the-whole-family\",\n    mdxType: \"Link\"\n  }, \"Tapple\"), \". Unfortunately, my husband and I could not find this game anywhere available as it is out of stock in Target, Amazon, Lowe's, and more. \"), mdx(\"p\", null, \"So, I made a digital app version for my Android phone, which is only used for personal use.\"), mdx(\"h3\", null, \"The Requirements\"), mdx(\"p\", null, \"There needs to be four screens. The first screen needs to provide the players a time window, letter choices, and a distinct start button. During this screen, the players can verbalize a category. Clicking \\\"Start\\\" leads to the second screen. The second screen shows any active letters. Click any active letter should A) disable that letter from play B) lead to a timer where a player must name an item of the category of that letter in a specified time. If a player can think of an item, then they \\\"slap\\\" aka click the hand. Success leads to the second screen again, which is the list of active letters. If they fail, the timer runs out and lands on the game end screen. This game end screen can also be reached if all the letters are chosen and successfully used.\"))))), mdx(Container, {\n    fluid: true,\n    className: \"light-grey\",\n    mdxType: \"Container\"\n  }, mdx(\"div\", {\n    className: \"pad\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    className: \"mt-4\",\n    mdxType: \"Col\"\n  }, mdx(\"h2\", null, \"Technology Used\"), mdx(\"h3\", null, \"Coding Tools\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(Link, {\n    to: \"https://developer.android.com/kotlin\",\n    mdxType: \"Link\"\n  }, \"Kotlin with Android Studio\"))), mdx(\"h3\", null, \"Graphic Tool\"), mdx(\"ul\", null, mdx(\"li\", null, \"Adobe Illustrator\")))))), mdx(Container, {\n    fluid: true,\n    mdxType: \"Container\"\n  }, mdx(\"div\", {\n    className: \"pad\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    className: \"mt-4\",\n    mdxType: \"Col\"\n  }, mdx(\"h2\", null, \"Final Result\"))), mdx(Row, {\n    xs: 1,\n    md: 2,\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    className: \"mb-4\",\n    mdxType: \"Col\"\n  }, mdx(\"p\", null, \" The video on the right shows the four screens with a 5 second timer and with a limited set of letters. \")), mdx(Col, {\n    className: \"mb-4\",\n    mdxType: \"Col\"\n  }, mdx(\"video\", {\n    width: \"100%\",\n    height: \"100%\",\n    autoPlay: true,\n    loop: true\n  }, mdx(\"source\", {\n    src: '../../videos/lettgories_vid.mp4',\n    type: \"video/mp4\"\n  })), \"Animated\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Lettgories"}}},"pageContext":{"id":"89a48d68-aa51-5886-beaa-1be57774985c"}},"staticQueryHashes":[]}