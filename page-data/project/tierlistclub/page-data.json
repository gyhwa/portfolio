{"componentChunkName":"component---src-templates-post-js","path":"/project/tierlistclub/","result":{"data":{"mdx":{"id":"183e5535-5107-558d-8be5-3e99c11bb1b3","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tier List Club\",\n  \"date\": \"2021-03-05\",\n  \"featuredImage\": \"./images/tierlistclub/tiers.png\",\n  \"summary\": \"Making a webpage for a club.\",\n  \"tag\": [\"code\", \"all\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Container, {\n    fluid: true,\n    mdxType: \"Container\"\n  }, mdx(\"div\", {\n    className: \"pad\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    mdxType: \"Col\"\n  }, mdx(\"h2\", null, \"Project Summary\"), mdx(\"h3\", null, \"The History\"), mdx(\"p\", null, \"Tiering based of a tier list is an easy way to sort a category of items in a easy to understand way. Originally, it was a way to organize in gaming power levels of characters in games, but now it has gone beyond gaming and can be used to show the tierer's opinions of a category.\"), mdx(\"p\", null, \"I had fun tiering ridiculous categories - fast food joints, cereal to name a few examples - with close friends. This was done by using Google Sheets with each tiering session occurring in each tab. At first it was fine, but the tabs quickly grew out of hand and it was hard to see which tab was the current category and topic on hand. \"), mdx(\"h3\", null, \"The Goal\"), mdx(\"p\", null, \"I want to create a similar experience, but one that helped focus everyone involved on one current topic at a time. Other than that I did not want to change much. I wanted club members to be able to submit their tiers and view their submission along with others still. I wanted to make sure that the club was kept relatively small, so I needed a way to gate membership. I also want to keep it relatively low effort, so I knew I wanted to only make changes to the theme monthly along with pushing everyone's list monthly. \"))))), mdx(Container, {\n    fluid: true,\n    className: \"light-grey\",\n    mdxType: \"Container\"\n  }, mdx(\"div\", {\n    className: \"pad\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    className: \"mt-4\",\n    mdxType: \"Col\"\n  }, mdx(\"h2\", null, \"Features\"), mdx(\"h3\", null, \"MVP Features\"), mdx(\"ul\", null, mdx(\"li\", null, \"Account-based by username\"), mdx(\"ul\", null, mdx(\"li\", null, \"Account registered only if they had the access code\")), mdx(\"li\", null, \"Viewable category (theme)\"), mdx(\"li\", null, \"Submit and edit that month's tiers\"), mdx(\"li\", null, \"View other's submissions\"), mdx(\"li\", null, \"Easy way for me (as an admin) to pull final submissions to the archive and reset everyone's submissions to null\")), mdx(\"h3\", null, \"MAP Features\"), mdx(\"ul\", null, mdx(\"li\", null, \"User account settings\")), mdx(\"h3\", null, \"Nice to Have Features\"), mdx(\"ul\", null, mdx(\"li\", null, \"A way to make sure each member only had one account\")))))), mdx(Container, {\n    fluid: true,\n    mdxType: \"Container\"\n  }, mdx(\"div\", {\n    className: \"pad\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    className: \"mt-4\",\n    mdxType: \"Col\"\n  }, mdx(\"h2\", null, \"Technology Used\"), mdx(\"h3\", null, \"Coding Tools\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(Link, {\n    to: \"https://nodejs.org/en/\",\n    mdxType: \"Link\"\n  }, \"Node.js\"), \" - Back-End JavaScript runtime\"), mdx(\"li\", null, mdx(Link, {\n    to: \"https://mongoosejs.com/\",\n    mdxType: \"Link\"\n  }, \"Mongoose\"), \" - MongoDB Object modeling\"), mdx(\"li\", null, mdx(Link, {\n    to: \"https://ejs.co/\",\n    mdxType: \"Link\"\n  }, \"EJS\"), \" - Embedded Javascript templating\"), mdx(\"li\", null, mdx(Link, {\n    to: \"https://react-bootstrap.github.io/\",\n    mdxType: \"Link\"\n  }, \"Bootstrap React\"), \" - Front-End UI library\")), mdx(\"p\", null, \"Notable Packages:\"), mdx(\"ul\", null, mdx(\"li\", null, \"Passport for user authentication\")), mdx(\"h3\", null, \"Graphics Tool\"), mdx(\"ul\", null, mdx(\"li\", null, mdx(Link, {\n    to: \"https://colorhunt.co/\",\n    mdxType: \"Link\"\n  }, \"Colorhunt\"), \" - Color Palette\"), mdx(\"li\", null, \"Adobe Illustrator\")))))), mdx(Container, {\n    fluid: true,\n    className: \"light-grey\",\n    mdxType: \"Container\"\n  }, mdx(\"div\", {\n    className: \"pad\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    className: \"mt-4\",\n    mdxType: \"Col\"\n  }, mdx(\"h2\", null, \"Process\"), mdx(\"h3\", null, \"Steps\"), mdx(\"ol\", null, mdx(\"li\", null, \"Made all the EJS pages with HTML and added CSS\"), mdx(\"ul\", null, mdx(\"li\", null, \"Focused first on creating a nav bar so I could understand how a user would get to each page\"), mdx(\"li\", null, \"Then made all the pages one by one, starting first with the easiest (pages that did not need any forms, then pages that needed forms). I also made these pages so that they didn't need any backend by adding mock data. If there were any graphics needed, these were just filled with a placeholder image.\")), mdx(\"li\", null, \"Created backend to allow for user account creation and tierlist submission\"), mdx(\"ul\", null, mdx(\"li\", null, \"Account creation using Passport and other npm packages to make my life easir (ex.password encryption) \"), mdx(\"li\", null, \"Post request for submissions\"), mdx(\"li\", null, \"Send information from MongoDB to the frontend when asked by a get request\")), mdx(\"li\", null, \"Fixed up any frontend to use any information received from the backend instead of the mock data\"), mdx(\"li\", null, \"Wrote copy and created graphics, which were then added to the site.\")), mdx(\"p\", null, mdx(\"img\", {\n    width: \"100%\",\n    src: '../../images/tierlistclub/about.png',\n    alt: \"original\"\n  })), mdx(\"h3\", null, \"End Result\"), mdx(\"p\", null, \"Heroku App\"), mdx(\"p\", null, mdx(\"a\", {\n    href: \"https://tierlistclub.herokuapp.com/\"\n  }, \"https://tierlistclub.herokuapp.com/\")), mdx(\"p\", null, \"Discord\"), mdx(\"p\", null, mdx(\"a\", {\n    href: \"https://discord.gg/NKNwJqdVzH\"\n  }, \"Discord\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Tier List Club"}}},"pageContext":{"id":"183e5535-5107-558d-8be5-3e99c11bb1b3"}},"staticQueryHashes":[]}